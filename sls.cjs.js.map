{"version":3,"file":"sls.cjs.js","sources":["../src/config/bff.config.ts","../src/environment.ts","../src/server/helper.ts","../src/server/runtime/template.ts","../src/server/runtime/prod.ts","../src/server/index.ts","../src/sls.ts"],"sourcesContent":["/**\n * @file BFF server config\n * @module config.bff\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const API_TUNNEL_PREFIX = '/_tunnel'\nexport const DEFAULT_SERVER_PORT = 3000\nexport const getPort = () => Number(process.env.PORT || DEFAULT_SERVER_PORT)\n","/**\n * @file Dev environment\n * @module environment\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum NodeEnv {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport const NODE_ENV = process.env.NODE_ENV as NodeEnv\nexport const isDev = process.env.NODE_ENV === NodeEnv.Development\nexport const isProd = process.env.NODE_ENV === NodeEnv.Production\nexport const isTest = process.env.NODE_ENV === NodeEnv.Test\n","/**\n * @file BFF Server helper\n * @module server.helper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport { isDev } from '@/environment'\n\n// MARK: 与非生产资料解耦\nexport const NODEPRESS_API = `https://api.surmon.me`\n\nexport const ROOT_PATH = process.cwd()\nexport const DIST_PATH = path.join(ROOT_PATH, 'dist')\nexport const PRDO_CLIENT_PATH = path.join(DIST_PATH, 'client')\nexport const PRDO_SERVER_PATH = path.join(DIST_PATH, 'server')\n\nexport const PUBLIC_PATH = isDev ? path.join(ROOT_PATH, 'public') : PRDO_CLIENT_PATH\n","import type { MetaResult } from '@/services/meta'\n\nexport const resolveTemplate = (config: {\n  template: string\n  appHTML: string\n  metas: MetaResult\n  scripts?: string\n  manifest?: any\n}) => {\n  const { template, appHTML, metas, scripts, manifest } = config\n\n  const bodyScripts = [\n    scripts\n    // MARK: https://cn.vitejs.dev/config/#build-ssrmanifest\n    // client output less assets (3 js + 1 css) & built-in HTML\n    // manifest\n  ].join('\\n')\n\n  const html = template\n    // MARK: replace! $ sign & use function replacer\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n    .replace(/<title>[\\s\\S]*<\\/title>/, '')\n    .replace(`<html`, () => `<html ${metas.htmlAttrs} `)\n    .replace(`<head>`, () => `<head>\\n${metas.headTags}`)\n    .replace(`<!--app-html-->`, () => appHTML)\n    .replace(`<body>`, () => `<body ${metas.bodyAttrs}>`)\n    .replace(`</body>`, () => `\\n${bodyScripts}\\n</body>`)\n\n  return html\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { DIST_PATH, PRDO_SERVER_PATH } from '../helper'\nimport { resolveTemplate } from './template'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableProdRuntime = async (app: Express) => {\n  const template = fs.readFileSync(path.resolve(DIST_PATH, 'template.html'), 'utf-8')\n  const { renderApp, renderError } = require(path.resolve(PRDO_SERVER_PATH, 'ssr.js'))\n\n  app.use('*', async (request, response) => {\n    try {\n      const redered: RenderResult = await renderApp(request)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","/**\n * @file BFF Server main\n * @module server.index\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport http from 'http'\nimport express from 'express'\nimport compression from 'compression'\nimport cookieParser from 'cookie-parser'\n\nexport const createExpressApp = () => {\n  // init app\n  const app = express()\n  const server = http.createServer(app)\n\n  // middlewares\n  app.use(cookieParser())\n  app.use(compression())\n\n  return {\n    app,\n    server\n  }\n}\n","/**\n * @file Serverless server entry\n * @module Serverless\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { getPort } from '@/config/bff.config'\nimport { enableProdRuntime } from './server/runtime/prod'\nimport { createExpressApp } from './server'\n\nconst { app, server } = createExpressApp()\n\n// TODO\nenableProdRuntime(app)\nserver.listen(getPort())\n\n// MARK\nexport const initializer = (context, callback) => {\n  console.log('serverless initializing')\n  callback(null, '')\n}\n\n// MARK\nexport const handler = (request, response, context) => {\n  console.log('hello world')\n  response.send('hello world')\n}\n"],"names":["path","fs","express","http","cookieParser","compression"],"mappings":"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"}