{"version":3,"file":"bff.cjs.js","sources":["../src/environment.ts","../src/constants/tunnel.ts","../src/config/bff.config.ts","../src/config/app.config.ts","../src/server/helper.ts","../src/server/getters/archive.ts","../src/server/getters/rss.ts","../src/server/getters/sitemap.ts","../src/transforms/outside.ts","../src/server/getters/gtag.ts","../src/server/getters/ghchart.ts","../src/server/getters/bilibili.ts","../src/server/getters/wallpaper.ts","../src/server/getters/github.ts","../src/server/getters/music.ts","../src/server/runtime/template.ts","../src/server/runtime/dev.ts","../src/server/runtime/prod.ts","../src/constants/error.ts","../src/server/responser.ts","../src/server/cacher.ts","../src/server/index.ts","../src/bff.ts"],"sourcesContent":["/**\n * @file Dev environment\n * @module environment\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum NodeEnv {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport const NODE_ENV = process.env.NODE_ENV as NodeEnv\nexport const isDev = process.env.NODE_ENV === NodeEnv.Development\nexport const isProd = process.env.NODE_ENV === NodeEnv.Production\nexport const isTest = process.env.NODE_ENV === NodeEnv.Test\n","/**\n * @file Tunnel constant\n * @module constant.tunnel\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum TunnelModule {\n  BiliBili = 'bilibili',\n  Wallpaper = 'wallpaper',\n  GitHub = 'gitHub',\n  Music = 'music'\n}\n","/**\n * @file BFF server config\n * @module config.bff\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const API_TUNNEL_PREFIX = '/_tunnel'\nexport const DEFAULT_SERVER_PORT = 3000\nexport const getPort = () => Number(process.env.PORT || DEFAULT_SERVER_PORT)\n","/**\n * @file App config\n * @module config.app\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const DEFAULT_FETCH_DELAY = 468\nexport const PRIMARY_COLOR = '#0088f5'\nexport const MUSIC_ALBUM_ID = '638949385'\nexport const BILIBILI_UID = '27940710'\nexport const GITHUB_UID = 'surmon-china'\nexport const GA_MEASUREMENT_ID = 'UA-84887611-3'\nexport const ADSENSE_CLIENT_ID = 'ca-pub-4710915636313788'\n\nexport const META = Object.freeze({\n  title: 'Surmon.me',\n  keywords: 'Surmon 博客,surmon-china,苏尔蒙,Vue 博客,前端技术开发博客,JavaScript 技术',\n  description: '来苏之望',\n  domain: 'surmon.me',\n  url: 'https://surmon.me',\n  author: 'Surmon',\n  email: 'i@surmon.me'\n})\n\nexport const FRIEND_LINKS = Object.freeze({\n  JimmyLv: '//blog.jimmylv.info'\n  // SkyRover: '//skyrover.me',\n  // Jooger: '//jooger.me'\n})\n\nexport const VALUABLE_LINKS = Object.freeze({\n  RSS: '/rss.xml',\n  SITE_MAP: '/sitemap.xml',\n  SPONSOR: '/sponsor',\n\n  SURMON_ME: 'https://github.com/surmon-china/surmon.me',\n  GITHUB_BLOG_LIST: 'https://github.com/stars/surmon-china/lists/surmon-me',\n  VUNIVERSAL: 'https://github.com/surmon-china/vuniversal',\n  NODEPRESS: 'https://github.com/surmon-china/nodepress',\n  SURMON_ME_NATIVE: 'https://github.com/surmon-china/surmon.me.native',\n  APP_APK_FILE:\n    'https://raw.githubusercontent.com/surmon-china/surmon.me.native/master/dist/android/surmon.me.apk',\n\n  THROW_ERROR: 'https://throwerror.io',\n  FOX_FINDER: 'https://foxfinder.io',\n  GITHUB: 'https://github.com/surmon-china',\n  GITHUB_SPONSORS: 'https://github.com/sponsors/surmon-china',\n  PAYPAL: 'https://www.paypal.me/surmon',\n  UPWORK: 'https://www.upwork.com/freelancers/~0142e621258ac1770d',\n  FUCK_IPC: 'http://www.beian.miit.gov.cn',\n\n  GOOGLE_LIVE_MAP: 'https://www.google.com/maps/d/embed?mid=1sRx6t0Yj1TutbwORCvjwTMgr70r62Z6w',\n  QQ_GROUP:\n    'https://shang.qq.com/wpa/qunwpa?idkey=837dc31ccbcd49feeba19430562be7bdc06f4428880f78a391fd61c8af714ce4',\n  TELEGRAM: 'https://t.me/surmon',\n  TELEGRAM_GROUP: 'https://t.me/joinchat/F6wOlxYwSCUpZTYj3WTAWA',\n  SPOTIFY: 'https://open.spotify.com/user/v0kz9hpwpbqnmtnrfhbyl812o',\n  MUSIC_163: 'https://music.163.com/#/playlist?id=638949385',\n  YOUTUBE: 'https://www.youtube.com/channel/UCoL-j6T28PLSJ2U6ZdONS0w',\n  DOUBAN: 'https://www.douban.com/people/nocower',\n  ZHIHU: 'https://www.zhihu.com/people/surmon',\n  WEIBO: 'https://weibo.com/surmon',\n  QUORA: 'https://www.quora.com/profile/Surmon',\n  BILIBILI: 'https://space.bilibili.com/27940710',\n  STACK_OVERFLOW: 'https://stackoverflow.com/users/6222535/surmon?tab=profile',\n  LEETCODE_CN: 'https://leetcode-cn.com/u/surmon',\n  LINKEDIN: 'https://www.linkedin.com/in/surmon',\n  INSTAGRAM: 'https://www.instagram.com/surmon666',\n  TWITTER: 'https://twitter.com/surmon_me'\n})\n","/**\n * @file BFF Server helper\n * @module server.helper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport { isDev } from '@/environment'\n\n// MARK: 与非生产资料解耦\nexport const NODEPRESS_API = `https://api.surmon.me`\n\nexport const ROOT_PATH = process.cwd()\nexport const DIST_PATH = path.join(ROOT_PATH, 'dist')\nexport const PRDO_CLIENT_PATH = path.join(DIST_PATH, 'client')\nexport const PRDO_SERVER_PATH = path.join(DIST_PATH, 'server')\n\nexport const PUBLIC_PATH = isDev ? path.join(ROOT_PATH, 'public') : PRDO_CLIENT_PATH\n","/**\n * @file BFF archive getter\n * @module server.getter.archive\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { META } from '@/config/app.config'\nimport { NODEPRESS_API } from '../helper'\n\nexport const getPageURL = (page) => `${META.url}/${page}`\nexport const getTagURL = (tag) => `${META.url}/tag/${tag}`\nexport const getCategoryURL = (category) => `${META.url}/category/${category}`\nexport const getArticleURL = (id) => `${META.url}/article/${id}`\n\nexport const getArchiveData = () => {\n  return axios\n    .get<any>(`${NODEPRESS_API}/archive`, { timeout: 6000 })\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data.result\n      } else {\n        return Promise.reject(response.statusText)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON?.() || error)\n    })\n}\n","/**\n * @file Archive RSS generator\n * @module server.getter.rss\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport RSS from 'rss'\nimport { META } from '@/config/app.config'\nimport { getArchiveData, getArticleURL } from './archive'\n\nexport const getRSSXML = async (archiveData?: any) => {\n  const archive = archiveData || (await getArchiveData())\n  const feed = new RSS({\n    title: META.title,\n    description: META.description,\n    site_url: META.url,\n    feed_url: `${META.url}/rss.xml`,\n    image_url: `${META.url}/icon.png`,\n    managingEditor: META.author,\n    webMaster: META.author,\n    generator: `${META.domain}`,\n    categories: archive.categories.map((category) => category.slug),\n    copyright: `${new Date().getFullYear()} ${META.title}`,\n    language: 'zh',\n    ttl: 60\n  })\n  archive.articles.forEach((article) =>\n    feed.item({\n      title: article.title,\n      description: article.description,\n      url: getArticleURL(article.id),\n      guid: getArticleURL(article.id),\n      categories: article.category.map((category) => category.slug),\n      author: META.author,\n      date: article.create_at,\n      enclosure: {\n        url: article.thumb\n      }\n    })\n  )\n  return feed.xml({ indent: true })\n}\n","/**\n * @file Archive sitemap generator\n * @module server.getter.sitemap\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { Readable } from 'stream'\nimport { SitemapStream, streamToPromise, SitemapItemLoose, EnumChangefreq } from 'sitemap'\nimport { getArchiveData, getArticleURL, getPageURL, getTagURL, getCategoryURL } from './archive'\nimport { META } from '@/config/app.config'\n\nexport const getSitemapXML = async (archiveData?: any) => {\n  const archive = archiveData || (await getArchiveData())\n  const sitemapStream = new SitemapStream({\n    hostname: META.url\n  })\n\n  const sitemapItemList: SitemapItemLoose[] = [\n    { url: META.url, changefreq: EnumChangefreq.ALWAYS, priority: 1 },\n    {\n      url: getPageURL('about'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageURL('merch'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageURL('archive'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    },\n    {\n      url: getPageURL('guestbook'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    }\n  ]\n\n  archive.categories.forEach((category) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getCategoryURL(category.slug)\n    })\n  })\n\n  archive.tags.forEach((tag) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getTagURL(tag.slug)\n    })\n  })\n\n  archive.articles.forEach((article) => {\n    sitemapItemList.push({\n      priority: 0.8,\n      changefreq: EnumChangefreq.DAILY,\n      url: getArticleURL(article.id),\n      lastmodISO: new Date(article.update_at).toISOString()\n    })\n  })\n\n  return streamToPromise(Readable.from(sitemapItemList).pipe(sitemapStream))\n}\n","/**\n * @file Outside\n * @module service.outside\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const getGAScriptURL = (gaMeasurementID: string) => {\n  return `https://www.googletagmanager.com/gtag/js?id=${gaMeasurementID}`\n}\n","/**\n * @file BFF GA getter\n * @module server.getter.gtag\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { GA_MEASUREMENT_ID } from '@/config/app.config'\nimport { getGAScriptURL } from '@/transforms/outside'\n\nexport const getGTagScript = async () => {\n  const response = await axios.get<string>(getGAScriptURL(GA_MEASUREMENT_ID), { timeout: 6000 })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF ghchart getter\n * @module server.getter.ghchart\n * @author Surmon <https://github.com/surmon-china>\n * @repo https://github.com/sallar/github-contributions-chart\n */\n\nimport axios from 'axios'\nimport { GITHUB_UID } from '@/config/app.config'\n\nexport const getGitHubChartSVG = async () => {\n  const response = await axios.get<string>(`https://ghchart.rshah.org/${GITHUB_UID}`, {\n    timeout: 8000\n  })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF bilibili getter\n * @module server.getter.bilibili\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { BILIBILI_UID, META } from '@/config/app.config'\n\nconst PAGE_SIZE = 45\nconst PAGE = 1\n\nexport const getBiliBiliVideos = async (): Promise<Array<any>> => {\n  const videosResult = await axios.request<any>({\n    headers: { 'User-Agent': META.title },\n    url: `https://api.bilibili.com/x/space/arc/search?mid=${BILIBILI_UID}&ps=${PAGE_SIZE}&tid=0&pn=${PAGE}&order=pubdate&jsonp=jsonp`\n  })\n  if (videosResult.data.code === 0) {\n    return videosResult.data.data.list.vlist\n  } else {\n    throw new Error(String(videosResult.status + videosResult.statusText))\n  }\n}\n","/**\n * @file BFF wallpaper getter\n * @module server.getter.wallpaper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport WonderfulBingWallpaper, { WonderfulBingWallpaperOption } from 'wonderful-bing-wallpaper'\n\nexport interface IWallpaper {\n  zh: any\n  en: any\n}\n\nconst wbw = new WonderfulBingWallpaper()\n\n// 获取今日壁纸\nexport const getWallpapers = async (params?: WonderfulBingWallpaperOption): Promise<any> => {\n  const wallpaperJSON = await wbw.getWallpapers({ ...params, size: 8 })\n  try {\n    return wbw.humanizeWallpapers(wallpaperJSON)\n  } catch (error) {\n    throw 'wallpaper 控制器解析 JSON 失败' + error\n  }\n}\n\n// 今日壁纸缓存（ZH）\nexport const getZHWallpapers = () => {\n  return getWallpapers({\n    local: 'zh-CN',\n    host: 'cn.bing.com',\n    ensearch: 0\n  })\n}\n\n// 今日壁纸缓存（EN）\nexport const getENWallpapers = () => {\n  return getWallpapers({\n    local: 'en-US',\n    host: 'bing.com',\n    ensearch: 1\n  })\n}\n\nexport const getAllWallpapers = async (): Promise<IWallpaper> => {\n  const [zh, en] = await Promise.all([getZHWallpapers(), getENWallpapers()])\n  return { zh, en }\n}\n","/**\n * @file BFF GitHub getter\n * @module server.getter.github\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { GITHUB_UID, META } from '@/config/app.config'\n\nexport interface IGithubRepository {\n  html_url: string\n  name: string\n  fork: boolean\n  forks: number\n  forks_count: number\n  description: string\n  open_issues_count: number\n  stargazers_count: number\n  created_at: string\n  language: string\n}\n\nexport const getGitHubRepositories = async (): Promise<Array<IGithubRepository>> => {\n  const response = await axios.request<any>({\n    headers: { 'User-Agent': META.title },\n    url: `http://api.github.com/users/${GITHUB_UID}/repos?per_page=168`\n  })\n  return response.data.map(\n    (rep) =>\n      ({\n        html_url: rep.html_url,\n        name: rep.name || ' ',\n        fork: rep.fork,\n        forks: rep.forks,\n        forks_count: rep.forks_count,\n        description: rep.description || ' ',\n        open_issues_count: rep.open_issues_count,\n        stargazers_count: rep.stargazers_count,\n        created_at: rep.created_at,\n        language: rep.language\n      } as IGithubRepository)\n  )\n}\n","/**\n * @file BFF music getter\n * @module server.getter.music\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport NeteaseMusic from 'simple-netease-cloud-music'\nimport { MUSIC_ALBUM_ID } from '@/config/app.config'\n\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/playlists.html\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/song-objects.html#special-keys\nexport interface Song {\n  id: number\n  name: string\n  album: string\n  artist: string\n  cover_art_url: string\n  url: string\n}\n\nconst PLAY_LIST_LIMIT = 68\nconst neteseMusic = new NeteaseMusic()\n\n// 获取歌单列表\nexport const getSongList = async (): Promise<Array<Song>> => {\n  const result = await neteseMusic._playlist(MUSIC_ALBUM_ID, PLAY_LIST_LIMIT)\n  if (result.code < 0) {\n    throw new Error(result.message)\n  }\n  return (\n    result?.playlist?.tracks\n      // 过滤掉无版权音乐\n      ?.filter((track) => track?.privilege?.cp !== 0)\n      // 格式化数据\n      ?.map(\n        (track) =>\n          ({\n            id: track.id,\n            name: track.name,\n            album: track?.al?.name || '-',\n            artist: (track.ar || []).map((artist: any) => artist.name).join(' / '),\n            cover_art_url: track.al?.picUrl,\n            url: null as any as string\n          } as Song)\n      )\n  )\n}\n\n// 获取播放地址，403 暂不启用！\nexport const getSongs = async (): Promise<Song[]> => {\n  // 1. 获取列表\n  const songs = await getSongList()\n  // 2. 使用列表的 IDs 获取 urls\n  const songIds = songs.map((song) => String(song.id))\n  const { data: songUrls } = await neteseMusic.url(songIds, 128)\n  // 3. 用 map 合成\n  const urlMap = new Map<number, string>(songUrls.map((songUrl) => [songUrl.id, songUrl.url]))\n  // 4. 合成可用数据，并过滤掉无有效地址的数据\n  return songs\n    .map((song) => ({\n      ...song,\n      url: urlMap.get(song.id) as string\n    }))\n    .filter((song) => !!song.url)\n}\n","import type { MetaResult } from '@/services/meta'\n\nexport const resolveTemplate = (config: {\n  template: string\n  appHTML: string\n  metas: MetaResult\n  scripts?: string\n  manifest?: any\n}) => {\n  const { template, appHTML, metas, scripts, manifest } = config\n\n  const bodyScripts = [\n    scripts\n    // MARK: https://cn.vitejs.dev/config/#build-ssrmanifest\n    // client output less assets (3 js + 1 css) & built-in HTML\n    // manifest\n  ].join('\\n')\n\n  const html = template\n    .replace(/<title>[\\s\\S]*<\\/title>/, '')\n    .replace(`<html`, `<html ${metas.htmlAttrs} `)\n    .replace(`<head>`, `<head>\\n${metas.headTags}`)\n    .replace(`<!--app-html-->`, appHTML)\n    .replace(`<body>`, `<body ${metas.bodyAttrs}>`)\n    .replace(`</body>`, `\\n${bodyScripts}\\n</body>`)\n\n  return html\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { createServer } from 'vite'\nimport { resolveTemplate } from './template'\nimport { ROOT_PATH } from '../helper'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableDevRuntime = async (app: Express) => {\n  const viteServer = await createServer({\n    root: process.cwd(),\n    logLevel: 'info',\n    server: {\n      middlewareMode: 'ssr',\n      watch: {\n        usePolling: true,\n        interval: 100\n      }\n    }\n  })\n\n  // use vite's connect instance as middleware\n  app.use(viteServer.middlewares)\n  app.use('*', async (request, response) => {\n    const { renderApp, renderError } = await viteServer.ssrLoadModule('/src/ssr.ts')\n    let template = fs.readFileSync(path.resolve(ROOT_PATH, 'index.html'), 'utf-8')\n\n    try {\n      const url = request.originalUrl\n      template = await viteServer.transformIndexHtml(url, template)\n      const redered: RenderResult = await renderApp(request)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      viteServer.ssrFixStacktrace(error)\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { DIST_PATH, PRDO_SERVER_PATH } from '../helper'\nimport { resolveTemplate } from './template'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableProdRuntime = async (app: Express) => {\n  const template = fs.readFileSync(path.resolve(DIST_PATH, 'template.html'), 'utf-8')\n  const { renderApp, renderError } = require(path.resolve(PRDO_SERVER_PATH, 'ssr.js'))\n\n  app.use('*', async (request, response) => {\n    try {\n      const redered: RenderResult = await renderApp(request)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","/**\n * @file Error constant\n * @module constant.error\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const BAD_REQUEST = 400\nexport const NOT_FOUND = 404\nexport const INVALID_ERROR = 500\n","/**\n * @file BFF Server responser\n * @module server.responser\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { RequestHandler, Response } from 'express'\nimport { INVALID_ERROR } from '@/constants/error'\n\nexport const erroror = (response: Response, error: any) => {\n  console.warn(`[BFF] error:`, error)\n  response.status(INVALID_ERROR)\n  response.send(error?.message || String(error))\n}\n\nexport const responser = (promise: () => Promise<any>): RequestHandler => {\n  return (_, response) => {\n    promise()\n      .then((data) => response.send(data))\n      .catch((error) => erroror(response, error))\n  }\n}\n","/**\n * @file BFF Server cacher\n * @module server.cacher\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport LRU from 'lru-cache'\n\nconst bffCache = new LRU({\n  max: Infinity,\n  maxAge: 1000 * 60 * 60 * 2 // 2 hour cache\n})\n\nexport interface CacherConfig {\n  getter: () => Promise<any>\n  /** cache key */\n  key: string\n  /** cache age [seconds] */\n  age: number\n  /** retry when after [seconds] */\n  retryWhen?: number\n}\n\nconst retryingMap = new Map<string, boolean>()\nconst retry = (config: CacherConfig) => {\n  if (bffCache.has(config.key)) {\n    retryingMap.set(config.key, false)\n    return\n  }\n\n  config\n    .getter()\n    .then((data) => {\n      bffCache.set(config.key, data, config.age * 1000)\n    })\n    .catch((error) => {\n      console.warn('[cacher] retry error:', error)\n    })\n    .finally(() => {\n      retryingMap.set(config.key, false)\n    })\n}\n\nexport const cacher = async (config: CacherConfig) => {\n  // cached\n  if (bffCache.has(config.key)) {\n    return bffCache.get(config.key)\n  }\n\n  try {\n    const data = await config.getter()\n    bffCache.set(config.key, data, config.age * 1000)\n    return data\n  } catch (error: any) {\n    // retry only once\n    if (config.retryWhen && !retryingMap.get(config.key)) {\n      retryingMap.set(config.key, true)\n      setTimeout(() => retry({ ...config }), config.retryWhen * 1000)\n    }\n\n    if (typeof error === 'string') {\n      return Promise.reject(`cacher error > ${error}`)\n    }\n\n    const err = (error as any).toJSON?.() || error\n    err.name = `cacher error > ${err.name || ''}`\n    return Promise.reject(err)\n  }\n}\n","/**\n * @file BFF Server main\n * @module server.index\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport http from 'http'\nimport express from 'express'\nimport compression from 'compression'\nimport cookieParser from 'cookie-parser'\n\nexport const createExpressApp = () => {\n  // init app\n  const app = express()\n  const server = http.createServer(app)\n\n  // middlewares\n  app.use(cookieParser())\n  app.use(compression())\n\n  return {\n    app,\n    server\n  }\n}\n","/**\n * @file BFF server entry\n * @module BFF-server\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport express from 'express'\nimport { NODE_ENV, isDev } from '@/environment'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { API_TUNNEL_PREFIX, getPort } from '@/config/bff.config'\nimport { getRSSXML } from './server/getters/rss'\nimport { getSitemapXML } from './server/getters/sitemap'\nimport { getGTagScript } from './server/getters/gtag'\nimport { getGitHubChartSVG } from './server/getters/ghchart'\nimport { getBiliBiliVideos } from './server/getters/bilibili'\nimport { getAllWallpapers } from './server/getters/wallpaper'\nimport { getGitHubRepositories } from './server/getters/github'\nimport { getSongList } from './server/getters/music'\nimport { enableDevRuntime } from './server/runtime/dev'\nimport { enableProdRuntime } from './server/runtime/prod'\nimport { PUBLIC_PATH } from './server/helper'\nimport { responser, erroror } from './server/responser'\nimport { cacher } from './server/cacher'\nimport { createExpressApp } from './server'\n\n// @ts-expect-error\nprocess.noDeprecation = true\n\n// app\nconst { app, server } = createExpressApp()\n\n// static\napp.use(express.static(PUBLIC_PATH))\n\n// sitemap\napp.get('/sitemap.xml', async (_, response) => {\n  try {\n    const data = await cacher({\n      key: 'sitemap',\n      age: 60 * 60, // 1 hours\n      getter: getSitemapXML\n    })\n    response.header('Content-Type', 'application/xml')\n    response.send(data)\n  } catch (error) {\n    erroror(response, error)\n  }\n})\n\n// rss\napp.get('/rss.xml', async (_, response) => {\n  try {\n    const data = await cacher({\n      key: 'rss',\n      age: 60 * 60, // 1 hours\n      getter: getRSSXML\n    })\n    response.header('Content-Type', 'application/xml')\n    response.send(data)\n  } catch (error) {\n    erroror(response, error)\n  }\n})\n\n// gtag\napp.get('/gtag.js', async (_, response) => {\n  try {\n    const data = await cacher({\n      key: 'gtag',\n      age: 60 * 60 * 24, // 24 hours\n      retryWhen: 60 * 60 * 1, // 1 hours\n      getter: getGTagScript\n    })\n    response.header('Content-Type', 'text/javascript')\n    response.send(data)\n  } catch (error) {\n    erroror(response, error)\n  }\n})\n\n// ghchart\napp.get('/ghchart.svg', async (_, response) => {\n  try {\n    const data = await cacher({\n      key: 'ghchart',\n      age: 60 * 60 * 6, // 6 hours\n      retryWhen: 60 * 60 * 30, // 30 minutes\n      getter: getGitHubChartSVG\n    })\n    response.header('Content-Type', 'image/svg+xml')\n    response.send(data)\n  } catch (error) {\n    erroror(response, error)\n  }\n})\n\n// tunnel services\napp.get(\n  `${API_TUNNEL_PREFIX}/${TunnelModule.BiliBili}`,\n  responser(() =>\n    cacher({\n      key: 'bilibili',\n      age: 60 * 60 * 1, // 1 hours\n      retryWhen: 60 * 5, // 5 minutes\n      getter: getBiliBiliVideos\n    })\n  )\n)\n\napp.get(\n  `${API_TUNNEL_PREFIX}/${TunnelModule.Wallpaper}`,\n  responser(() =>\n    cacher({\n      key: 'wallpaper',\n      age: 60 * 60 * 8, // 8 hours\n      retryWhen: 60 * 30, // 30 minutes\n      getter: getAllWallpapers\n    })\n  )\n)\n\napp.get(\n  `${API_TUNNEL_PREFIX}/${TunnelModule.GitHub}`,\n  responser(() =>\n    cacher({\n      key: 'github',\n      age: 60 * 60 * 2, // 2 hours\n      retryWhen: 60 * 30, // 30 minutes\n      getter: getGitHubRepositories\n    })\n  )\n)\n\napp.get(\n  `${API_TUNNEL_PREFIX}/${TunnelModule.Music}`,\n  responser(() =>\n    cacher({\n      key: 'music',\n      age: 60 * 60 * 1, // 1 hours\n      retryWhen: 60 * 10, // 10 minutes\n      getter: getSongList\n    })\n  )\n)\n\n// app effect\nisDev ? enableDevRuntime(app) : enableProdRuntime(app)\n\n// run\nserver.listen(getPort(), () => {\n  const infos = [\n    `in ${NODE_ENV}`,\n    `at ${new Date().toLocaleString()}`,\n    `listening on ${JSON.stringify(server.address())}`\n  ]\n  console.info('[surmon.me]', `Run! ${infos.join(', ')}.`)\n})\n"],"names":["path","axios","RSS","SitemapStream","EnumChangefreq","streamToPromise","Readable","WonderfulBingWallpaper","NeteaseMusic","createServer","fs","LRU","express","http","cookieParser","compression"],"mappings":"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"}