{"version":3,"file":"bff.cjs.js","sources":["../src/environment.ts","../src/constants/tunnel.ts","../src/config/bff.config.ts","../src/config/app.config.ts","../src/server/helpers/configurer.ts","../src/server/getters/archive.ts","../src/server/getters/rss.ts","../src/server/getters/sitemap.ts","../src/transforms/gtag.ts","../src/server/getters/gtag.ts","../src/server/getters/ghchart.ts","../src/server/getters/bilibili.ts","../src/server/getters/wallpaper.ts","../src/server/getters/github.ts","../src/server/getters/twitter.ts","../src/server/getters/instagram.ts","../src/server/getters/youtube.ts","../src/server/getters/music.ts","../src/server/renderer/template.ts","../src/server/renderer/dev.ts","../src/server/renderer/prod.ts","../src/constants/error.ts","../src/server/helpers/responser.ts","../src/server/helpers/cacher.ts","../src/constants/proxy.ts","../src/server/proxy.ts","../src/server/cache.ts","../src/server/index.ts","../src/bff.ts"],"sourcesContent":["/**\n * @file Dev environment\n * @module environment\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum NodeEnv {\n  Development = 'development',\n  Production = 'production',\n  Test = 'test'\n}\n\nexport const NODE_ENV = process.env.NODE_ENV as NodeEnv\nexport const isDev = process.env.NODE_ENV === NodeEnv.Development\nexport const isProd = process.env.NODE_ENV === NodeEnv.Production\nexport const isTest = process.env.NODE_ENV === NodeEnv.Test\n","/**\n * @file Tunnel constant\n * @module constant.tunnel\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum TunnelModule {\n  TwitterUserInfo = 'twitter_userinfo',\n  TwitterTweets = 'twitter_tweets',\n  YouTubePlaylist = 'youtube_playlist',\n  YouTubeVideoList = 'youtube_video_list',\n  BiliBili = 'bilibili',\n  Instagram = 'instagram',\n  Wallpaper = 'wallpaper',\n  GitHub = 'gitHub',\n  Music = 'music'\n}\n","/**\n * @file BFF server config\n * @module config.bff\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const BFF_TUNNEL_PREFIX = '/_tunnel'\nexport const BFF_PROXY_PREFIX = '/_proxy'\nexport const BFF_PROXY_ALLOWLIST = ['https://surmon.me', 'https://cdn.surmon.me']\n\nexport const getBFFServerPort = () => Number(process.env.PORT || 3000)\n","/**\n * @file App config\n * @module config.app\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const DEFAULT_DELAY = 468\nexport const LONG_ARTICLE_THRESHOLD = 16688\nexport const PRIMARY_COLOR = '#0088f5'\nexport const GA_MEASUREMENT_ID = 'UA-84887611-3'\nexport const ADSENSE_CLIENT_ID = 'ca-pub-4710915636313788'\n\nexport const META = Object.freeze({\n  title: 'Surmon.me',\n  sub_title: '来苏之望',\n  domain: 'surmon.me',\n  url: 'https://surmon.me',\n  author: 'Surmon'\n})\n\nexport const THIRD_IDS = Object.freeze({\n  YOUTUBE_CHANNEL_ID: `UCoL-j6T28PLSJ2U6ZdONS0w`,\n  MUSIC_163_BGM_ALBUM_ID: '638949385',\n  BILIBILI_USER_ID: '27940710',\n  GITHUB_USER_ID: 'surmon-china',\n  TWITTER_USER_ID: 'surmon7788'\n})\n\nexport const FRIEND_LINKS = Object.freeze([\n  {\n    name: '吕立青的博客',\n    url: 'https://blog.jimmylv.info'\n  },\n  {\n    name: `nighca's log`,\n    url: 'https://nighca.me'\n  }\n])\n\nexport const SPECIAL_LINKS = Object.freeze([\n  {\n    name: 'iconfont',\n    url: 'https://www.iconfont.cn/'\n  },\n  {\n    name: `GitHub`,\n    url: 'https://github.com'\n  },\n  {\n    name: `PM2`,\n    url: 'https://pm2.keymetrics.io/'\n  },\n  {\n    name: `Vite`,\n    url: 'https://vitejs.dev/'\n  },\n  {\n    name: `Disqus`,\n    url: 'https://disqus.com/'\n  }\n])\n\nexport const VALUABLE_LINKS = Object.freeze({\n  RSS: '/rss.xml',\n  SITE_MAP: '/sitemap.xml',\n  SPONSOR: '/sponsor',\n\n  GITHUB_SURMON_ME: 'https://github.com/surmon-china/surmon.me',\n  GITHUB_NODEPRESS: 'https://github.com/surmon-china/nodepress',\n  GITHUB_SURMON_ME_NATIVE: 'https://github.com/surmon-china/surmon.me.native',\n  GITHUB_BLOG_STAR_LIST: 'https://github.com/stars/surmon-china/lists/surmon-me',\n  APP_APK_FILE:\n    'https://raw.githubusercontent.com/surmon-china/surmon.me.native/master/dist/android/surmon.me.apk',\n\n  THROW_ERROR: 'https://throwerror.io',\n  FOX_FINDER: 'https://foxfinder.io',\n  GITHUB: 'https://github.com/surmon-china',\n  GITHUB_SPONSORS: 'https://github.com/sponsors/surmon-china',\n  PAYPAL: 'https://www.paypal.me/surmon',\n  UPWORK: 'https://www.upwork.com/freelancers/~0142e621258ac1770d',\n  MARKDOWN: 'https://daringfireball.net/projects/markdown/',\n\n  GOOGLE_LIVE_MAP: 'https://www.google.com/maps/d/embed?mid=1sRx6t0Yj1TutbwORCvjwTMgr70r62Z6w&z=3',\n  QQ_GROUP:\n    'https://shang.qq.com/wpa/qunwpa?idkey=837dc31ccbcd49feeba19430562be7bdc06f4428880f78a391fd61c8af714ce4',\n  TELEGRAM: 'https://t.me/surmon',\n  TELEGRAM_GROUP: 'https://t.me/joinchat/F6wOlxYwSCUpZTYj3WTAWA',\n  SPOTIFY: 'https://open.spotify.com/user/v0kz9hpwpbqnmtnrfhbyl812o',\n  MUSIC_163: `https://music.163.com/#/playlist?id=${THIRD_IDS.MUSIC_163_BGM_ALBUM_ID}`,\n  YOUTUBE_CHANNEL: `https://www.youtube.com/channel/${THIRD_IDS.YOUTUBE_CHANNEL_ID}`,\n  DOUBAN: 'https://www.douban.com/people/nocower',\n  ZHIHU: 'https://www.zhihu.com/people/surmon',\n  WEIBO: 'https://weibo.com/surmon',\n  QUORA: 'https://www.quora.com/profile/Surmon',\n  BILIBILI: `https://space.bilibili.com/${THIRD_IDS.BILIBILI_USER_ID}`,\n  STACK_OVERFLOW: 'https://stackoverflow.com/users/6222535/surmon?tab=profile',\n  LEETCODE_CN: 'https://leetcode-cn.com/u/surmon',\n  LINKEDIN: 'https://www.linkedin.com/in/surmon',\n  INSTAGRAM: 'https://www.instagram.com/surmon666',\n  TWITTER: `https://twitter.com/${THIRD_IDS.TWITTER_USER_ID}`\n})\n","/**\n * @file BFF Server helper\n * @module server.helper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport path from 'path'\nimport { isDev } from '@/environment'\n\n// MARK: 与非生产资料解耦\nexport const NODEPRESS_API = `https://api.surmon.me`\n\nexport const ROOT_PATH = process.cwd()\nexport const DIST_PATH = path.join(ROOT_PATH, 'dist')\nexport const PRDO_CLIENT_PATH = path.join(DIST_PATH, 'client')\nexport const PRDO_SERVER_PATH = path.join(DIST_PATH, 'server')\n\nexport const PUBLIC_PATH = isDev ? path.join(ROOT_PATH, 'public') : PRDO_CLIENT_PATH\n","/**\n * @file BFF archive getter\n * @module server.getter.archive\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { META } from '@/config/app.config'\nimport { NODEPRESS_API } from '../helpers/configurer'\n\nexport const getPageURL = (page) => `${META.url}/${page}`\nexport const getTagURL = (tag) => `${META.url}/tag/${tag}`\nexport const getCategoryURL = (category) => `${META.url}/category/${category}`\nexport const getArticleURL = (id) => `${META.url}/article/${id}`\n\nexport const getArchiveData = () => {\n  return axios\n    .get<any>(`${NODEPRESS_API}/archive`, { timeout: 6000 })\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data.result\n      } else {\n        return Promise.reject(response.statusText)\n      }\n    })\n    .catch((error) => {\n      return Promise.reject(error.toJSON?.() || error)\n    })\n}\n","/**\n * @file Archive RSS generator\n * @module server.getter.rss\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport RSS from 'rss'\nimport { META } from '@/config/app.config'\nimport { getArchiveData, getArticleURL } from './archive'\n\nexport const getRSSXML = async (archiveData?: any) => {\n  const archive = archiveData || (await getArchiveData())\n  const feed = new RSS({\n    title: META.title,\n    description: META.sub_title,\n    site_url: META.url,\n    feed_url: `${META.url}/rss.xml`,\n    image_url: `${META.url}/icon.png`,\n    managingEditor: META.author,\n    webMaster: META.author,\n    generator: `${META.domain}`,\n    categories: archive.categories.map((category) => category.slug),\n    copyright: `${new Date().getFullYear()} ${META.title}`,\n    language: 'zh',\n    ttl: 60\n  })\n  archive.articles.forEach((article) =>\n    feed.item({\n      title: article.title,\n      description: article.description,\n      url: getArticleURL(article.id),\n      guid: String(article.id),\n      categories: article.category.map((category) => category.slug),\n      author: META.author,\n      date: article.create_at,\n      enclosure: {\n        url: article.thumb\n      }\n    })\n  )\n  return feed.xml({ indent: true })\n}\n","/**\n * @file Archive sitemap generator\n * @module server.getter.sitemap\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { Readable } from 'stream'\nimport { SitemapStream, streamToPromise, SitemapItemLoose, EnumChangefreq } from 'sitemap'\nimport { getArchiveData, getArticleURL, getPageURL, getTagURL, getCategoryURL } from './archive'\nimport { META } from '@/config/app.config'\n\nexport const getSitemapXML = async (archiveData?: any) => {\n  const archive = archiveData || (await getArchiveData())\n  const sitemapStream = new SitemapStream({\n    hostname: META.url\n  })\n\n  const sitemapItemList: SitemapItemLoose[] = [\n    { url: META.url, changefreq: EnumChangefreq.ALWAYS, priority: 1 },\n    {\n      url: getPageURL('about'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageURL('merch'),\n      changefreq: EnumChangefreq.YEARLY,\n      priority: 1\n    },\n    {\n      url: getPageURL('archive'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    },\n    {\n      url: getPageURL('guestbook'),\n      changefreq: EnumChangefreq.ALWAYS,\n      priority: 1\n    }\n  ]\n\n  archive.categories.forEach((category) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getCategoryURL(category.slug)\n    })\n  })\n\n  archive.tags.forEach((tag) => {\n    sitemapItemList.push({\n      priority: 0.6,\n      changefreq: EnumChangefreq.DAILY,\n      url: getTagURL(tag.slug)\n    })\n  })\n\n  archive.articles.forEach((article) => {\n    sitemapItemList.push({\n      priority: 0.8,\n      changefreq: EnumChangefreq.DAILY,\n      url: getArticleURL(article.id),\n      lastmodISO: new Date(article.update_at).toISOString()\n    })\n  })\n\n  return streamToPromise(Readable.from(sitemapItemList).pipe(sitemapStream)).then((data) =>\n    data.toString()\n  )\n}\n","/**\n * @file Outside\n * @module service.outside\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const getGAScriptURL = (measurementID: string) => {\n  return `https://www.googletagmanager.com/gtag/js?id=${measurementID}`\n}\n","/**\n * @file BFF GA getter\n * @module server.getter.gtag\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { GA_MEASUREMENT_ID } from '@/config/app.config'\nimport { getGAScriptURL } from '@/transforms/gtag'\n\nexport const getGTagScript = async () => {\n  const response = await axios.get<string>(getGAScriptURL(GA_MEASUREMENT_ID), { timeout: 6000 })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF ghchart getter\n * @module server.getter.ghchart\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { THIRD_IDS } from '@/config/app.config'\n\n// https://github.com/surmon-china/README.md/blob/main/templates/github-contributions-calendar/README.md\nexport const getGitHubChartSVG = async () => {\n  const response = await axios.get<string>(\n    `https://readme.app.surmon.me/api/render?template_id=github-contributions-calendar&props.username=${THIRD_IDS.GITHUB_USER_ID}&props.size=10&props.gap=3&svg.width=686&svg.height=88`,\n    { timeout: 8000 }\n  )\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF bilibili getter\n * @module server.getter.bilibili\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { THIRD_IDS, META } from '@/config/app.config'\n\nconst PAGE_SIZE = 36\nconst PAGE = 1\n\nexport const getBiliBiliVideos = async (): Promise<Array<any>> => {\n  const videosResult = await axios.request<any>({\n    headers: { 'User-Agent': META.title },\n    url: `https://api.bilibili.com/x/space/arc/search?mid=${THIRD_IDS.BILIBILI_USER_ID}&ps=${PAGE_SIZE}&tid=0&pn=${PAGE}&order=pubdate&jsonp=jsonp`\n  })\n  if (videosResult.data.code === 0) {\n    return videosResult.data.data.list.vlist\n  } else {\n    throw new Error(String(videosResult.status + videosResult.statusText))\n  }\n}\n","/**\n * @file BFF wallpaper getter\n * @module server.getter.wallpaper\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport WonderfulBingWallpaper, { WonderfulBingWallpaperOption } from 'wonderful-bing-wallpaper'\n\nexport interface IWallpaper {\n  zh: any\n  en: any\n}\n\nconst wbw = new WonderfulBingWallpaper()\n\n// 获取今日壁纸\nexport const getWallpapers = async (params?: WonderfulBingWallpaperOption): Promise<any> => {\n  const wallpaperJSON = await wbw.getWallpapers({ ...params, size: 8 })\n  try {\n    return wbw.humanizeWallpapers(wallpaperJSON)\n  } catch (error) {\n    throw 'wallpaper 控制器解析 JSON 失败' + error\n  }\n}\n\n// 今日壁纸缓存（ZH）\nexport const getZHWallpapers = () => {\n  return getWallpapers({\n    local: 'zh-CN',\n    host: 'cn.bing.com',\n    ensearch: 0\n  })\n}\n\n// 今日壁纸缓存（EN）\nexport const getENWallpapers = () => {\n  return getWallpapers({\n    local: 'en-US',\n    host: 'bing.com',\n    ensearch: 1\n  })\n}\n\nexport const getAllWallpapers = async (): Promise<IWallpaper> => {\n  const [zh, en] = await Promise.all([getZHWallpapers(), getENWallpapers()])\n  return { zh, en }\n}\n","/**\n * @file BFF GitHub getter\n * @module server.getter.github\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { THIRD_IDS, META } from '@/config/app.config'\n\nexport interface GitHubRepository {\n  html_url: string\n  name: string\n  fork: boolean\n  forks: number\n  forks_count: number\n  description: string\n  open_issues_count: number\n  stargazers_count: number\n  created_at: string\n  language: string\n}\n\nexport const getGitHubRepositories = async (): Promise<Array<GitHubRepository>> => {\n  const response = await axios.request<any>({\n    headers: { 'User-Agent': META.title },\n    url: `http://api.github.com/users/${THIRD_IDS.GITHUB_USER_ID}/repos?per_page=168`\n  })\n  return response.data.map(\n    (rep) =>\n      ({\n        html_url: rep.html_url,\n        name: rep.name || ' ',\n        fork: rep.fork,\n        forks: rep.forks,\n        forks_count: rep.forks_count,\n        description: rep.description || ' ',\n        open_issues_count: rep.open_issues_count,\n        stargazers_count: rep.stargazers_count,\n        created_at: rep.created_at,\n        language: rep.language\n      } as GitHubRepository)\n  )\n}\n","/**\n * @file BFF Twitter getter\n * @module server.getter.twitter\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { argv } from 'yargs'\nimport { THIRD_IDS } from '@/config/app.config'\n\n// 1. Generate tokens\n// https://developer.twitter.com/en/portal/projects-and-apps\nconst bearerToken = argv.twitter_bearer_token\n\n// 2. Get userinfo\n// https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username\nconst getTwitterUserinfoByUsername = async (username: string) => {\n  const response = await axios.get<any>(`https://api.twitter.com/2/users/by/username/${username}`, {\n    timeout: 8000,\n    params: {\n      'user.fields': `location,url,description,profile_image_url,public_metrics`\n    },\n    headers: {\n      Authorization: `Bearer ${bearerToken}`\n    }\n  })\n  if (response.status === 200 && response.data.data) {\n    return response.data.data\n  } else {\n    throw response.data\n  }\n}\n\n// 3. Get tweets\n// https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets\nconst getTwitterTweetsByUID = async (UID: string) => {\n  const response = await axios.get<any>(`https://api.twitter.com/2/users/${UID}/tweets`, {\n    timeout: 8000,\n    params: {\n      exclude: 'replies',\n      expansions: `attachments.media_keys,author_id,entities.mentions.username,geo.place_id,in_reply_to_user_id,referenced_tweets.id,referenced_tweets.id.author_id`,\n      'tweet.fields': `attachments,author_id,context_annotations,conversation_id,created_at,entities,id,in_reply_to_user_id,lang,possibly_sensitive,public_metrics,referenced_tweets,reply_settings,source,text,withheld`,\n      'user.fields': `created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld`,\n      'place.fields': `contained_within,country,country_code,full_name,id,name,place_type`,\n      'media.fields': `duration_ms,height,media_key,preview_image_url,type,url,width,public_metrics`,\n      max_results: 46\n    },\n    headers: {\n      Authorization: `Bearer ${bearerToken}`\n    }\n  })\n  if (response.status === 200) {\n    return response.data\n  } else {\n    throw response.data\n  }\n}\n\nexport const getTwitterUserinfo = () => {\n  return getTwitterUserinfoByUsername(THIRD_IDS.TWITTER_USER_ID)\n}\n\nlet uidCache: string | null = null\nexport const getTwitterTweets = async () => {\n  uidCache = uidCache || ((await getTwitterUserinfo()).id as string)\n  return await getTwitterTweetsByUID(uidCache)\n}\n","/**\n * @file BFF instagram getter\n * @module server.getter.instagram\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { argv } from 'yargs'\n\n// 1. Generate long-lived access tokens for Instagram Testers\n// https://developers.facebook.com/apps/625907498725071/instagram-basic-display/basic-display/\n\n// 2. Get medias useing API\n// https://developers.facebook.com/docs/instagram-basic-display-api/reference/media#fields\n\n// 3. TODO: Refresh token\n// https://developers.facebook.com/docs/instagram-basic-display-api/reference/refresh_access_token\nconst fields = `id,username,permalink,caption,media_type,media_url,thumbnail_url,timestamp`\nconst token = argv.instagram_token\n\nexport interface InstagramMediaItem {\n  id: string\n  username: string\n  caption?: string\n  permalink: string\n  media_type: 'IMAGE' | 'CAROUSEL_ALBUM' | 'VIDEO' | string\n  media_url: string\n  thumbnail_url?: string\n  timestamp: string\n}\n\nexport const getInstagramMedias = async () => {\n  const response = await axios.get<{ data: Array<InstagramMediaItem> }>(\n    `https://graph.instagram.com/me/media?fields=${fields}&access_token=${token}`,\n    { timeout: 8000 }\n  )\n  if (response.status === 200 && response.data.data) {\n    return response.data.data\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF YouTube getter\n * @module server.getter.instagram\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport axios from 'axios'\nimport { argv } from 'yargs'\nimport { THIRD_IDS } from '@/config/app.config'\n\n// 1. Generate API key\n// https://console.cloud.google.com/apis/credentials\nconst token = argv.youtube_token\n\n// 2. Get playlist by Channel ID\n// https://developers.google.com/youtube/v3/docs/playlists/list\nexport const getYouTubeChannelPlayLists = async () => {\n  const response = await axios.get<any>(`https://www.googleapis.com/youtube/v3/playlists`, {\n    timeout: 8000,\n    params: {\n      part: 'snippet,contentDetails',\n      maxResults: 50,\n      channelId: THIRD_IDS.YOUTUBE_CHANNEL_ID,\n      key: token\n    }\n  })\n  if (response.status === 200 && response.data.items) {\n    return response.data.items\n  } else {\n    throw response.data\n  }\n}\n\n// 3. Get video list by playlist ID\n// https://developers.google.com/youtube/v3/docs/playlistItems/list\n// MARK: can't order by date, max results 50\nexport const getYouTubeVideoListByPlayerlistID = async (playlistID: string) => {\n  const response = await axios.get<any>(`https://www.googleapis.com/youtube/v3/playlistItems`, {\n    timeout: 8000,\n    params: {\n      part: 'snippet,contentDetails',\n      maxResults: 50,\n      playlistId: playlistID,\n      key: token\n    }\n  })\n  if (response.status === 200 && response.data.items) {\n    return response.data.items\n  } else {\n    throw response.data\n  }\n}\n","/**\n * @file BFF music getter\n * @module server.getter.music\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport NeteaseMusic from 'simple-netease-cloud-music'\nimport { THIRD_IDS } from '@/config/app.config'\n\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/playlists.html\n// https://521dimensions.com/open-source/amplitudejs/docs/configuration/song-objects.html#special-keys\nexport interface Song {\n  id: number\n  name: string\n  album: string\n  artist: string\n  cover_art_url: string\n  url: string\n}\n\nconst PLAY_LIST_LIMIT = 68\nconst neteseMusic = new NeteaseMusic()\n\n// 获取歌单列表\nexport const getSongList = async (): Promise<Array<Song>> => {\n  const result = await neteseMusic._playlist(THIRD_IDS.MUSIC_163_BGM_ALBUM_ID, PLAY_LIST_LIMIT)\n  if (result.code < 0) {\n    throw new Error(result.message)\n  }\n  return (\n    result?.playlist?.tracks\n      // 过滤掉无版权音乐\n      ?.filter((track) => track?.privilege?.cp !== 0)\n      // 格式化数据\n      ?.map(\n        (track) =>\n          ({\n            id: track.id,\n            name: track.name,\n            album: track?.al?.name || '-',\n            artist: (track.ar || []).map((artist: any) => artist.name).join(' / '),\n            cover_art_url: track.al?.picUrl,\n            url: null as any as string\n          } as Song)\n      )\n  )\n}\n\n// 获取播放地址，403 暂不启用！\nexport const getSongs = async (): Promise<Song[]> => {\n  // 1. 获取列表\n  const songs = await getSongList()\n  // 2. 使用列表的 IDs 获取 urls\n  const songIds = songs.map((song) => String(song.id))\n  const { data: songUrls } = await neteseMusic.url(songIds, 128)\n  // 3. 用 map 合成\n  const urlMap = new Map<number, string>(songUrls.map((songUrl) => [songUrl.id, songUrl.url]))\n  // 4. 合成可用数据，并过滤掉无有效地址的数据\n  return songs\n    .map((song) => ({\n      ...song,\n      url: urlMap.get(song.id) as string\n    }))\n    .filter((song) => !!song.url)\n}\n","import type { MetaResult } from '@/services/meta'\n\nexport const resolveTemplate = (config: {\n  template: string\n  appHTML: string\n  metas: MetaResult\n  scripts?: string\n  manifest?: any\n}) => {\n  const { template, appHTML, metas, scripts, manifest } = config\n\n  const bodyScripts = [\n    scripts\n    // MARK: https://cn.vitejs.dev/config/#build-ssrmanifest\n    // client output less assets (3 js + 1 css) & built-in HTML\n    // manifest\n  ].join('\\n')\n\n  const html = template\n    // MARK: replace! $ sign & use function replacer\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n    .replace(/<title>[\\s\\S]*<\\/title>/, '')\n    .replace(`<html`, () => `<html ${metas.htmlAttrs} `)\n    .replace(`<head>`, () => `<head>\\n${metas.headTags}`)\n    .replace(`<!--app-html-->`, () => appHTML)\n    .replace(`<body>`, () => `<body ${metas.bodyAttrs}>`)\n    .replace(`</body>`, () => `\\n${bodyScripts}\\n</body>`)\n\n  return html\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { createServer } from 'vite'\nimport type { RenderResult } from '@/ssr'\nimport { ROOT_PATH } from '../helpers/configurer'\nimport { CacheClient } from '../cache'\nimport { resolveTemplate } from './template'\n\nexport const enableDevRenderer = async (app: Express, cache: CacheClient) => {\n  const viteServer = await createServer({\n    root: process.cwd(),\n    logLevel: 'info',\n    server: {\n      middlewareMode: 'ssr',\n      watch: {\n        usePolling: true,\n        interval: 100\n      }\n    }\n  })\n\n  // use vite's connect instance as middleware\n  app.use(viteServer.middlewares)\n  app.use('*', async (request, response) => {\n    const { renderApp, renderError } = await viteServer.ssrLoadModule('/src/ssr.ts')\n    let template = fs.readFileSync(path.resolve(ROOT_PATH, 'index.html'), 'utf-8')\n\n    try {\n      const url = request.originalUrl\n      template = await viteServer.transformIndexHtml(url, template)\n      const redered: RenderResult = await renderApp(request, cache)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      viteServer.ssrFixStacktrace(error)\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","import fs from 'fs'\nimport path from 'path'\nimport { Express } from 'express'\nimport { DIST_PATH, PRDO_SERVER_PATH } from '../helpers/configurer'\nimport { CacheClient } from '../cache'\nimport { resolveTemplate } from './template'\nimport type { RenderResult } from '@/ssr'\n\nexport const enableProdRenderer = async (app: Express, cache: CacheClient) => {\n  const template = fs.readFileSync(path.resolve(DIST_PATH, 'template.html'), 'utf-8')\n  const { renderApp, renderError } = require(path.resolve(PRDO_SERVER_PATH, 'ssr.js'))\n\n  app.use('*', async (request, response) => {\n    try {\n      const redered: RenderResult = await renderApp(request, cache)\n      response\n        .status(redered.code)\n        .set({ 'Content-Type': 'text/html' })\n        .end(\n          resolveTemplate({\n            template,\n            appHTML: redered.html,\n            metas: redered.metas,\n            scripts: redered.scripts\n          })\n        )\n    } catch (error: any) {\n      const redered: RenderResult = await renderError(request, error)\n      response.status(redered.code).end(\n        resolveTemplate({\n          template,\n          appHTML: redered.html,\n          metas: redered.metas,\n          scripts: redered.scripts\n        })\n      )\n    }\n  })\n}\n","/**\n * @file Error constant\n * @module constant.error\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport const BAD_REQUEST = 400\nexport const FORBIDDEN = 403\nexport const NOT_FOUND = 404\nexport const INVALID_ERROR = 500\n","/**\n * @file BFF Server responser\n * @module server.responser\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { RequestHandler, Response } from 'express'\nimport { INVALID_ERROR } from '@/constants/error'\n\nexport const erroror = (response: Response, error: any) => {\n  console.warn(`[BFF] error:`, error)\n  response.status(INVALID_ERROR)\n  response.send(error?.message || String(error))\n}\n\nexport const responser = (promise: () => Promise<any>): RequestHandler => {\n  return (_, response) => {\n    promise()\n      .then((data) => response.send(data))\n      .catch((error) => erroror(response, error))\n  }\n}\n","/**\n * @file BFF Server cacher\n * @module server.cacher\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport type { CacheClient } from '../cache'\n\nexport interface CacherConfig {\n  cache: CacheClient\n  getter: () => Promise<any>\n  /** cache key */\n  key: string\n  /** cache age [seconds] */\n  age: number\n  /** retry when after [seconds] */\n  retryWhen?: number\n}\n\n// fetch & cache\nconst fetchAndCache = async (config: CacherConfig) => {\n  const data = await config.getter()\n  await config.cache.set(config.key, data, config.age)\n  return data\n}\n\n// timeout prefetch\nconst setTimeoutPreRefresh = (config: CacherConfig, preSeconds: number, refreshCount = 1) => {\n  const timeoutSeconds = config.age - preSeconds\n  console.info(\n    '[cacher] setTimeoutPreRefresh',\n    `> ${config.key} + ${refreshCount}`,\n    `> cache expire when after ${config.age}s`,\n    `> pre refresh when after ${timeoutSeconds}s`\n  )\n\n  setTimeout(async () => {\n    try {\n      await fetchAndCache(config)\n      setTimeoutPreRefresh(config, preSeconds, refreshCount + 1)\n    } catch (error) {\n      console.warn(\n        `[cacher] setTimeoutPreRefresh ERROR!`,\n        `> ${config.key} + ${refreshCount}`,\n        error\n      )\n    }\n  }, timeoutSeconds * 1000)\n}\n\nconst retryingMap = new Map<string, boolean>()\nconst retryFetch = async (config: CacherConfig) => {\n  if (await config.cache.has(config.key)) {\n    retryingMap.set(config.key, false)\n    return\n  }\n\n  try {\n    await fetchAndCache(config)\n  } catch (error) {\n    console.warn('[cacher] retry error:', error)\n  } finally {\n    retryingMap.set(config.key, false)\n  }\n}\n\nexport const cacher = async (_config: CacherConfig) => {\n  // key prefix\n  const config = {\n    ..._config,\n    key: `bff_${_config.key}`\n  }\n\n  // cached\n  if (await config.cache.has(config.key)) {\n    return await config.cache.get(config.key)\n  }\n\n  try {\n    // 1. fetch & cache\n    const data = await fetchAndCache(config)\n    // 2. set timeout pre 1 min refresh\n    setTimeoutPreRefresh(config, 60)\n    // 3. return data\n    return data\n  } catch (error: any) {\n    // retry only once\n    if (config.retryWhen && !retryingMap.get(config.key)) {\n      retryingMap.set(config.key, true)\n      setTimeout(() => retryFetch({ ...config }), config.retryWhen * 1000)\n    }\n\n    if (typeof error === 'string') {\n      return Promise.reject(`cacher error > ${error}`)\n    }\n\n    const err = (error as any).toJSON?.() || error\n    err.name = `cacher error > ${err.name || ''}`\n    return Promise.reject(err)\n  }\n}\n","/**\n * @file Proxy constant\n * @module constant.proxy\n * @author Surmon <https://github.com/surmon-china>\n */\n\nexport enum ProxyModule {\n  Default = 'default',\n  BiliBili = 'bilibili',\n  Instagram = 'instagram',\n  YouTube = 'youtube',\n  NetEasyMusic = '163',\n  Disqus = 'disqus'\n}\n","/**\n * @file BFF Server proxy\n * @module server.proxy\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport { RequestHandler } from 'express'\nimport { createProxyServer } from 'http-proxy'\nimport { FORBIDDEN, BAD_REQUEST } from '@/constants/error'\nimport { ProxyModule } from '@/constants/proxy'\nimport { BFF_PROXY_PREFIX, BFF_PROXY_ALLOWLIST } from '@/config/bff.config'\nimport { isProd } from '@/environment'\n\ninterface ProxyConfigItem {\n  module: ProxyModule\n  origin?: string\n  referer?: string\n}\n\nconst proxys: ProxyConfigItem[] = [\n  {\n    module: ProxyModule.Default,\n    origin: 'https://surmon.me',\n    referer: 'https://surmon.me/'\n  },\n  {\n    module: ProxyModule.BiliBili,\n    origin: 'https://www.bilibili.com',\n    referer: 'https://www.bilibili.com/'\n  },\n  {\n    module: ProxyModule.Instagram,\n    origin: 'https://www.instagram.com',\n    referer: 'https://www.instagram.com/'\n  },\n  {\n    module: ProxyModule.YouTube,\n    origin: 'https://www.youtube.com',\n    referer: 'https://www.youtube.com/'\n  },\n  {\n    module: ProxyModule.NetEasyMusic,\n    origin: 'https://music.163.com',\n    referer: 'https://music.163.com/'\n  },\n  {\n    module: ProxyModule.Disqus,\n    referer: 'https://surmon.disqus.com/'\n  }\n]\n\nexport const PROXY_ROUTE_PATH = `${BFF_PROXY_PREFIX}/:module/*`\n\nexport const proxyer = (): RequestHandler => {\n  // https://github.com/http-party/node-http-proxy\n  const proxyMap = new Map(proxys.map(({ module, ...rest }) => [module, rest]))\n  const proxy = createProxyServer({\n    prependPath: true,\n    ignorePath: true,\n    toProxy: false,\n    xfwd: true\n  })\n\n  // https://github.com/http-party/node-http-proxy/issues/813\n  proxy.on('error', (error: any, _, response: any, target: any) => {\n    console.warn(`[BFF] proxy error: ${error.message} > ${target?.href}`)\n    if (!response.headersSent) {\n      response.writeHead(500, { 'content-type': 'application/json' })\n    }\n    response.end(JSON.stringify({ error: 'proxy_error', reason: error.message }))\n  })\n\n  proxy.on('proxyReq', (proxyRequest) => {\n    proxyRequest.setHeader(\n      'User-Agent',\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3223.8 Safari/'\n    )\n  })\n\n  proxy.on('proxyRes', (proxyResponse, request: any) => {\n    const statusCode = proxyResponse.statusCode as number\n    const location = proxyResponse.headers.location\n    if ([301, 302, 307, 308].includes(statusCode) && location) {\n      proxyResponse.headers.location = `${BFF_PROXY_PREFIX}/${\n        request.params.module\n      }/${encodeURIComponent(location)}`\n    }\n    // proxy cache\n    if (statusCode === 200) {\n      proxyResponse.headers['cache-control'] = `max-age=315360000`\n    }\n  })\n\n  return (request, response) => {\n    if (isProd) {\n      const referer = (request.headers.referrer as string) || request.headers.referer\n      const origin = request.headers.origin\n      const isAllowedReferer = !referer || BFF_PROXY_ALLOWLIST.some((i) => referer.startsWith(i))\n      const isAllowedOrigin = !origin || BFF_PROXY_ALLOWLIST.some((i) => origin.startsWith(i))\n      if (!isAllowedReferer || !isAllowedOrigin) {\n        response.status(FORBIDDEN).send()\n        return\n      }\n    }\n\n    const config = proxyMap.get(request.params.module as ProxyModule)\n    const targetURL = decodeURIComponent(request.params['0'])\n    let parsedURL: URL | null = null\n    try {\n      parsedURL = new URL(targetURL)\n    } catch (error) {\n      response.status(BAD_REQUEST).send()\n      return\n    }\n\n    const headers: any = {}\n    if (config?.origin) {\n      headers['Origin'] = config.origin\n    }\n    if (config?.referer) {\n      headers['Referer'] = config.referer\n    }\n\n    proxy.web(request, response, {\n      target: targetURL,\n      changeOrigin: true,\n      followRedirects: false,\n      autoRewrite: false,\n      headers: {\n        host: parsedURL.hostname,\n        ...headers\n      }\n    })\n  }\n}\n","/**\n * @file Universal Server cache\n * @module server.cache\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport LRU from 'lru-cache'\nimport { createClient } from 'redis'\nimport { META } from '@/config/app.config'\n\nexport interface CacheClient {\n  set(\n    key: string,\n    value: any,\n    /** cache age [seconds] */\n    maxAge?: number\n  ): Promise<void>\n  get<T = any>(key: string): Promise<T>\n  has(key: string): Promise<boolean>\n  delete(key: string): Promise<any>\n  clear(): Promise<void>\n}\n\nconst getLRUClient = (): CacheClient => {\n  // https://github.com/isaacs/node-lru-cache\n  const lruCache = new LRU({\n    max: Infinity,\n    maxAge: -1 // MARK: default never expire\n  })\n\n  return {\n    set: (key: string, value: any, maxAge?: number) => {\n      return maxAge ? lruCache.set(key, value, maxAge * 1000) : lruCache.set(key, value)\n    },\n    get: (key) => lruCache.get(key),\n    has: (key) => lruCache.has(key),\n    delete: (key) => lruCache.del(key),\n    clear: () => lruCache.reset()\n  }\n}\n\nconst getRedisClient = async (): Promise<CacheClient> => {\n  // https://github.com/redis/node-redis\n  const client = createClient({\n    socket: {\n      // Only once connect! Redis error > reject\n      reconnectStrategy: () => new Error(`can't connect to Redis!`)\n    }\n  })\n  client.on('connect', () => console.info('[redis]', 'connecting...'))\n  client.on('reconnecting', () => console.info('[redis]', 'reconnecting...'))\n  client.on('ready', () => console.info('[redis]', 'readied!'))\n  client.on('error', (error) => console.warn('[redis]', 'Client Error!', error.message || error))\n  await client.connect()\n\n  const getCacheKey = (key: string) => {\n    const cacheKeyPrefix = META.domain.replace(/\\./gi, '_')\n    return `__${cacheKeyPrefix}_${key}`\n  }\n\n  const set: CacheClient['set'] = async (key, value, maxAge) => {\n    const _value = value ? JSON.stringify(value) : ''\n    if (maxAge) {\n      // https://redis.io/commands/setex\n      await client.setEx(getCacheKey(key), maxAge, _value)\n    } else {\n      await client.set(getCacheKey(key), _value)\n    }\n  }\n\n  const get: CacheClient['get'] = async (key) => {\n    const value = await client.get(getCacheKey(key))\n    return value ? JSON.parse(value) : value\n  }\n\n  const has: CacheClient['has'] = async (key) => {\n    const value = await client.exists(getCacheKey(key))\n    return Boolean(value)\n  }\n\n  const del: CacheClient['delete'] = (key) => client.del(getCacheKey(key))\n\n  const clear: CacheClient['clear'] = async () => {\n    const keys = await client.keys(getCacheKey('*'))\n    if (keys.length) {\n      await client.del(keys)\n    }\n  }\n\n  return {\n    set,\n    get,\n    has,\n    delete: del,\n    clear\n  }\n}\n\nexport const initCacheClient = async () => {\n  let cacheClient: CacheClient | null = null\n  try {\n    cacheClient = await getRedisClient()\n    console.info('[cache]', 'Redis store readied!')\n  } catch (error) {\n    cacheClient = getLRUClient()\n    console.info('[cache]', 'LRU store readied!')\n  }\n  await cacheClient.clear()\n  return cacheClient\n}\n","/**\n * @file BFF Server main\n * @module server.index\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport http from 'http'\nimport express from 'express'\nimport compression from 'compression'\nimport cookieParser from 'cookie-parser'\nimport { PROXY_ROUTE_PATH, proxyer } from './proxy'\nimport { initCacheClient } from './cache'\n\nexport const createExpressApp = async () => {\n  // init cache client\n  const cache = await initCacheClient()\n\n  // init app\n  const app = express()\n  const server = http.createServer(app)\n\n  // app proxy\n  app.use(PROXY_ROUTE_PATH, proxyer())\n\n  // app middlewares\n  app.use(express.json())\n  app.use(cookieParser())\n  app.use(compression())\n\n  return {\n    app,\n    server,\n    cache\n  }\n}\n","/**\n * @file BFF server entry\n * @module BFF-server\n * @author Surmon <https://github.com/surmon-china>\n */\n\nimport express from 'express'\nimport { NODE_ENV, isDev } from '@/environment'\nimport { TunnelModule } from '@/constants/tunnel'\nimport { BFF_TUNNEL_PREFIX, getBFFServerPort } from '@/config/bff.config'\nimport { getRSSXML } from './server/getters/rss'\nimport { getSitemapXML } from './server/getters/sitemap'\nimport { getGTagScript } from './server/getters/gtag'\nimport { getGitHubChartSVG } from './server/getters/ghchart'\nimport { getBiliBiliVideos } from './server/getters/bilibili'\nimport { getAllWallpapers } from './server/getters/wallpaper'\nimport { getGitHubRepositories } from './server/getters/github'\nimport { getTwitterTweets, getTwitterUserinfo } from './server/getters/twitter'\nimport { getInstagramMedias } from './server/getters/instagram'\nimport {\n  getYouTubeChannelPlayLists,\n  getYouTubeVideoListByPlayerlistID\n} from './server/getters/youtube'\nimport { getSongList } from './server/getters/music'\nimport { enableDevRenderer } from './server/renderer/dev'\nimport { enableProdRenderer } from './server/renderer/prod'\nimport { PUBLIC_PATH } from './server/helpers/configurer'\nimport { responser, erroror } from './server/helpers/responser'\nimport { cacher } from './server/helpers/cacher'\nimport { createExpressApp } from './server'\n\n// @ts-expect-error\nprocess.noDeprecation = true\n\n// app\ncreateExpressApp().then(({ app, server, cache }) => {\n  // static\n  app.use(express.static(PUBLIC_PATH))\n\n  // sitemap\n  app.get('/sitemap.xml', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'sitemap',\n        age: 60 * 60 * 2, // 2 hours\n        getter: getSitemapXML\n      })\n      response.header('Content-Type', 'application/xml')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // rss\n  app.get('/rss.xml', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'rss',\n        age: 60 * 60 * 2, // 2 hours\n        getter: getRSSXML\n      })\n      response.header('Content-Type', 'application/xml')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // gtag\n  app.get('/effects/gtag', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'gtag',\n        age: 60 * 60 * 24, // 24 hours\n        retryWhen: 60 * 60 * 1, // 1 hours\n        getter: getGTagScript\n      })\n      response.header('Content-Type', 'text/javascript')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // GitHub chart svg\n  app.get('/effects/ghchart', async (_, response) => {\n    try {\n      const data = await cacher({\n        cache,\n        key: 'ghchart',\n        age: 60 * 60 * 6, // 6 hours\n        retryWhen: 60 * 1, // 1 minute\n        getter: getGitHubChartSVG\n      })\n      response.header('Content-Type', 'image/svg+xml')\n      response.send(data)\n    } catch (error) {\n      erroror(response, error)\n    }\n  })\n\n  // BiliBili videos\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.BiliBili}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'bilibili',\n        age: 60 * 60 * 1, // 1 hours\n        retryWhen: 60 * 5, // 5 minutes\n        getter: getBiliBiliVideos\n      })\n    })\n  )\n\n  // Bing wallpapers\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.Wallpaper}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'wallpaper',\n        age: 60 * 60 * 8, // 8 hours\n        retryWhen: 60 * 30, // 30 minutes\n        getter: getAllWallpapers\n      })\n    })\n  )\n\n  // GitHub Repositories\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.GitHub}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'github',\n        age: 60 * 60 * 2, // 2 hours\n        retryWhen: 60 * 30, // 30 minutes\n        getter: getGitHubRepositories\n      })\n    })\n  )\n\n  // 163 music BGM list\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.Music}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'music',\n        age: 60 * 60 * 12, // 12 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getSongList\n      })\n    })\n  )\n\n  // Twitter userinfo\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.TwitterUserInfo}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'twitter_userinfo',\n        age: 60 * 60 * 12, // 12 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getTwitterUserinfo\n      })\n    })\n  )\n\n  // Twitter newest tweets\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.TwitterTweets}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'twitter_tweets',\n        age: 60 * 60 * 2, // 2 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getTwitterTweets\n      })\n    })\n  )\n\n  // Instagram newest medias\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.Instagram}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'instagram',\n        age: 60 * 60 * 6, // 6 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getInstagramMedias\n      })\n    })\n  )\n\n  // YouTube platlists\n  app.get(\n    `${BFF_TUNNEL_PREFIX}/${TunnelModule.YouTubePlaylist}`,\n    responser(() => {\n      return cacher({\n        cache,\n        key: 'youtube_playlist',\n        age: 60 * 60 * 24, // 24 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: getYouTubeChannelPlayLists\n      })\n    })\n  )\n\n  // YouTube videos\n  app.get(`${BFF_TUNNEL_PREFIX}/${TunnelModule.YouTubeVideoList}`, (request, response, next) => {\n    const playlistID = request.query.id\n    if (!playlistID || typeof playlistID !== 'string') {\n      return erroror(response, 'Invalid params')\n    }\n    responser(() => {\n      return cacher({\n        cache,\n        key: `youtube_playlist_${playlistID}`,\n        age: 60 * 60 * 1, // 1 hours\n        retryWhen: 60 * 10, // 10 minutes\n        getter: () => getYouTubeVideoListByPlayerlistID(playlistID)\n      })\n    })(request, response, next)\n  })\n\n  // vue renderer\n  isDev ? enableDevRenderer(app, cache) : enableProdRenderer(app, cache)\n\n  // run\n  server.listen(getBFFServerPort(), () => {\n    const infos = [\n      `in ${NODE_ENV}`,\n      `at ${new Date().toLocaleString()}`,\n      `listening on ${JSON.stringify(server.address())}`\n    ]\n    console.info('[surmon.me]', `Run! ${infos.join(', ')}.`)\n  })\n})\n"],"names":["path","axios","RSS","SitemapStream","EnumChangefreq","streamToPromise","Readable","WonderfulBingWallpaper","argv","token","NeteaseMusic","createServer","fs","createProxyServer","LRU","createClient","express","http","cookieParser","compression"],"mappings":"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"}